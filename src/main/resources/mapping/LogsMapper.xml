<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.as.signup.mapper.LogsMapper">
  <resultMap id="BaseResultMap" type="com.as.signup.entity.Logs">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="request" jdbcType="VARCHAR" property="request" />
    <result column="response" jdbcType="VARCHAR" property="response" />
    <result column="req_time" jdbcType="TIMESTAMP" property="reqTime" />
    <result column="resp_time" jdbcType="TIMESTAMP" property="respTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, request, response, req_time, resp_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_logs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_logs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.as.signup.entity.Logs">
    insert into t_logs (id, request, response, 
      req_time, resp_time, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{request,jdbcType=VARCHAR}, #{response,jdbcType=VARCHAR}, 
      #{reqTime,jdbcType=TIMESTAMP}, #{respTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.as.signup.entity.Logs">
    insert into t_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="request != null">
        request,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="reqTime != null">
        req_time,
      </if>
      <if test="respTime != null">
        resp_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="request != null">
        #{request,jdbcType=VARCHAR},
      </if>
      <if test="response != null">
        #{response,jdbcType=VARCHAR},
      </if>
      <if test="reqTime != null">
        #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="respTime != null">
        #{respTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.as.signup.entity.Logs">
    update t_logs
    <set>
      <if test="request != null">
        request = #{request,jdbcType=VARCHAR},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=VARCHAR},
      </if>
      <if test="reqTime != null">
        req_time = #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="respTime != null">
        resp_time = #{respTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.as.signup.entity.Logs">
    update t_logs
    set request = #{request,jdbcType=VARCHAR},
      response = #{response,jdbcType=VARCHAR},
      req_time = #{reqTime,jdbcType=TIMESTAMP},
      resp_time = #{respTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>